package org.udemy.exercise.Generics;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections4.map.HashedMap;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

class ExcelData {

	List<String> values = null;
	Map<String, List<String>> map = new HashedMap<>();

	public Map<String, List<String>> readExcel(String filename) throws IOException {
		File file = new File("C:\\RK\\report\\" + filename);
		FileInputStream fi = null;
		try {
			fi = new FileInputStream(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		XSSFWorkbook wb = new XSSFWorkbook(fi);
		XSSFSheet sheet = wb.getSheetAt(0);
		XSSFRow row = sheet.getRow(0);
		int colNum = row.getLastCellNum();
		int rowNum = sheet.getLastRowNum();

		for (int i = 0; i < colNum; i++) {
			values = new ArrayList<>();
			for (int j = 1; j <= rowNum; j++) {
				try{
					values.add(sheet.getRow(j).getCell(i).getStringCellValue());
				} catch (NullPointerException ne) {
					values.add("");
				}
				
			}
			map.put(row.getCell(i).getStringCellValue(), values);
		}

		return map;

	}

	public List<String> getColumnvalues(String colName) {
		List<String> colval = new ArrayList<>();
		for (String s : map.keySet()) {
			if (s.equals(colName)) {
				colval = map.get(s);
				break;
			}
		}

		return colval;
	}

}

public class CompareExcelSheets<T extends ExcelData, X extends ExcelData> implements Comparator<T> {

	public static void main(String[] args) throws IOException {
		ExcelData e1 = new ExcelData();
		ExcelData e2 = new ExcelData();
		e1.readExcel("compare1.xlsx");
		e2.readExcel("compare2.xlsx");

		CompareExcelSheets<ExcelData, ExcelData> comp = new CompareExcelSheets<>();

		comp.compare(e1, e2);
	}

	@Override
	public int compare(T o1, T o2) {
		Map<String, List<String>> mo1 = o1.readExcel("compare1.xlsx");
		try {
			for (String s : mo1.keySet()) {
				for (int j = 0; j < o1.)
				if (!o1.getColumnvalues(s).equals(o2.getColumnvalues(s))) {
					System.out.println("column " + s + " doesn't match");
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}

		return 0;
	}

	public void comp() {
		@SuppressWarnings("unchecked")
		T t = (T) new ExcelData();
		@SuppressWarnings("unchecked")
		X x = (X) new ExcelData();

		Map<String, List<String>> firstExcel = null;
		Map<String, List<String>> secondExcel = null;
		try {
			firstExcel = t.readExcel("compare1.xlsx");
			secondExcel = x.readExcel("compare2.xlsx");
		} catch (IOException e) {
			e.printStackTrace();
		}

		for (String s : firstExcel.keySet()) {
			if (firstExcel.get(s).equals(secondExcel.get(s))) {
				// System.out.println(firstExcel.get(s) + " are same.");
			} else {
				for (int i = 0; i < firstExcel.get(s).size(); i++) {
					if (!firstExcel.get(s).get(i).equals(secondExcel.get(s).get(i))) {
						System.out.println("Row-" + i + " of column - " + s + " is not matching.\n\t Found : "
								+ firstExcel.get(s).get(i) + "\n\t Expected : " + secondExcel.get(s).get(i));
					}
				}
			}
		}
	}
}
